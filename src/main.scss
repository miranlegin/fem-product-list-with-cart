:root {
  // COLORS
  --red: hsl(14, 86%, 42%);
  --green: hsl(159, 69%, 38%);
  --black: hsl(0, 0%, 0%);
  --white: hsl(0, 0%, 100%);

  --rose-900: hsl(14, 65%, 9%);
  --rose-500: hsl(12, 20%, 44%);
  --rose-400: hsl(7, 20%, 60%);
  --rose-300: hsl(14, 25%, 72%);
  --rose-100: hsl(13, 31%, 94%);
  --rose-50: hsl(20, 50%, 98%);

  // TYPOGRAPHY
  --ff-base: 'Red Hat Text', sans-serif;

  --fs-1: 2.5rem;
  --fs-2: 1.5rem;
  --fs-3: 1rem;
  --fs-4: 0.875rem;

  --fw-regular: 400;
  --fw-semibold: 600;
  --fw-bold: 700;

  // SPACING
  --space-1100: 5.5rem;
  --space-500: 2.5rem;
  --space-400: 2rem;
  --space-300: 1.5rem;
  --space-200: 1rem;
  --space-150: 0.75rem;
  --space-100: 0.5rem;
  --space-50: 0.25rem;
}

// RESET
/* 1. Use a more-intuitive box-sizing model */
*,
*::before,
*::after {
  box-sizing: border-box;
}
/* 2. Remove default margin */
* {
  margin: 0;
}
body {
  /* 3. Add accessible line-height */
  line-height: 1.5;
  /* 4. Improve text rendering */
  -webkit-font-smoothing: antialiased;
}
/* 5. Improve media defaults */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/* 6. Inherit fonts for form controls */
input,
button,
textarea,
select {
  font: inherit;
}
/* 7. Avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/* 8. Improve line wrapping */
p {
  text-wrap: pretty;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}
/*
    9. Create a root stacking context
  */
#root,
#__next {
  isolation: isolate;
}

// CUSTOM FONT

@font-face {
  font-family: 'Red Hat Text';
  src: url('/fonts/RedHatText-VariableFont_wght.ttf') format('truetype');
  font-weight: 400 700; /* Define the range of weights available in the variable font */
  font-style: normal;
  font-display: swap;
}

// UTILITY CLASSES

.text-preset-1 {
  font-weight: var(--fw-bold);
  font-size: var(--fs-1);
  line-height: 1.2;
}

.text-preset-2 {
  font-weight: var(--fw-bold);
  font-size: var(--fs-2);
  line-height: normal;
}

.text-preset-3 {
  font-weight: var(--fw-semibold);
  font-size: var(--fs-3);
  line-height: normal;
}

.text-preset-4 {
  font-weight: var(--fw-regular);
  font-size: var(--fs-4);
  line-height: normal;
}

.fw-bold {
  font-weight: var(--fw-bold);
}

.fw-semibold {
  font-weight: var(--fw-semibold);
}

.fw-regular {
  font-weight: var(--fw-regular);
}

.text-center {
  text-align: center;
}

.text-rose-900 {
  color: var(--rose-900);
}

.text-rose-500 {
  color: var(--rose-500);
}

.text-red {
  color: var(--red);
}

.text-white {
  color: var(--white);
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--space-100);
}

.icon {
  display: inline-block;
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}

.wrapper {
  max-width: 76rem;
  margin-inline: auto;
}

// LAYOUT
body {
  font-family: var(--ff-base);
  background-color: var(--rose-50);
}

picture,
img {
  display: block;
  max-width: 100%;
  height: auto;
}

button {
  cursor: pointer;
}

strong {
  font-weight: var(--fw-semibold);
}

dialog {
  margin: 0;
  border: 0;
  padding: 0;
  background-color: transparent;
}

.page-layout {
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: var(--space-400);
}

.button {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: var(--space-100);

  border: 1px solid var(--red);
  border-radius: 50vw;

  font-weight: var(--fw-semibold);

  &[data-type='primary'] {
    width: 100%;
    padding: var(--space-200);
    font-size: var(--fs-3);
    font-weight: var(--fw-semibold);
    line-height: 1.2;
    background-color: var(--red);
    color: var(--white);
  }

  &[data-type='secondary'] {
    min-width: 10rem;
    margin-inline: auto;
    border-color: var(--rose-400);
    padding: var(--space-150) var(--space-100);
    background-color: var(--white);
    color: var(--rose-900);

    transition: 175ms ease;

    &:hover {
      border-color: var(--red);
      color: var(--red);
    }
  }

  &[data-type='faux'] {
    justify-content: space-between;
    max-width: 160px;
    margin-inline: auto;
    padding: 2px 2px;
    background-color: var(--red);
    color: var(--white);
  }
}

.button-square {
  display: block;
  margin: 0;
  border: 0;
  border-radius: 50%;
  padding: 10px;
  font-size: 1.25rem;
  font-size: 19px; // fix chrome (maybe? subpixel rendering) bug
  background-color: transparent;
  color: var(--white);

  &[data-type='quantity'] {
    position: relative;
    transition: color 175ms ease;

    &::before {
      content: '';
      position: absolute;
      inset: 0;
      margin: 10px;
      border: 1.5px solid var(--white);
      border-radius: 50%;
      transition: background-color 175ms ease;
    }

    &:active {
      transform: translateY(1px);
    }

    &:hover,
    &:focus-visible {
      color: var(--red);

      &::before {
        background-color: var(--white);
      }
    }

    .icon {
      position: relative;
    }
  }

  &[data-type='remove'] {
    color: var(--rose-400);
    transition: color 175ms ease;

    &:hover {
      color: var(--rose-900);
    }
  }

  .icon {
    display: block;
  }
}

.banner {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: var(--space-100);

  border-radius: 0.5rem;
  padding: var(--space-200);

  background-color: var(--rose-50);

  .icon {
    flex-shrink: 0;
  }
}

.frame {
  display: grid;
  gap: var(--space-300);
  border-radius: 0.75rem;
  padding: var(--space-300);

  background-color: var(--white);
}

// ITEMS

.items-list {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: var(--space-400) var(--space-300);
}

.item-image {
  position: relative;

  border-radius: 0.5rem;

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    border: 2px solid transparent;
    border-radius: inherit;
    transition: border-color 175ms ease;
  }

  img {
    border-radius: inherit;
  }
}

[data-state='item-outline'] {
  &::before {
    border-color: var(--red);
  }
}

.item-description {
  display: grid;
  gap: var(--space-50);
  // margin-block-start: calc(-1 * var(--space-100));
}

// CART

.cart-list {
  list-style-type: none;
  padding-left: 0;
}

.cart-item {
  &:not(:first-child) {
    margin-block-start: var(--space-200);
    border-block-start: 1px solid var(--rose-100);
    padding-block-start: var(--space-200);
  }
}

.cart-item-layout {
  display: grid;
  grid-template-columns: 1fr auto;
  align-items: center;
  gap: var(--space-100);
}

.cart-item-column {
  display: grid;
  gap: var(--space-100);
}

.cart-item-pricing {
  display: flex;
  gap: var(--space-100);
}

.cart-divider {
  border-block-start: 1px solid var(--rose-100);
  padding-block-start: var(--space-300);
}

// ORDER

.order {
  display: grid;
  gap: var(--space-400);
  border-radius: 0.75rem;
  padding-block-start: var(--space-500);
  padding-block-end: var(--space-300);
  padding-inline: var(--space-300);
  background-color: var(--white);
}

.orders-list {
  list-style-type: none;
  padding-left: 0;
}

.order-item {
  &:not(:first-child) {
    margin-block-start: var(--space-200);
    border-block-start: 1px solid var(--rose-100);
    padding-block-start: var(--space-200);
  }
}

.order-item-layout {
  display: grid;
  grid-template-columns: auto 1fr auto;
  align-items: center;
  gap: var(--space-200);
}

.order-image {
  border-radius: 0.25rem;
}

.order-item-column {
  display: grid;
  gap: var(--space-100);
}

.order-summary {
  border-radius: 0.5rem;
  padding: var(--space-300);
  background-color: var(--rose-50);
}

.order-item-pricing {
  display: flex;
  gap: var(--space-100);
}

.order-divider {
  margin-block-start: var(--space-300);
  border-block-start: 1px solid var(--rose-100);
  padding-block-start: var(--space-300);
}
